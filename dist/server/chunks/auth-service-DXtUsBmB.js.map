{"version":3,"file":"auth-service-DXtUsBmB.js","sources":["../../../.svelte-kit/adapter-node/chunks/auth-service.js"],"sourcesContent":["import { D as Database, d as db } from \"./db.js\";\nclass CookiesManager {\n  constructor(_cookies) {\n    this._cookies = _cookies;\n  }\n  static _session_id_key = \"session_id\";\n  get session_id() {\n    return this._cookies.get(CookiesManager._session_id_key) ?? \"\";\n  }\n  setSessionId(session_id, max_age_sec) {\n    this._cookies.set(CookiesManager._session_id_key, session_id, {\n      path: \"/\",\n      maxAge: max_age_sec,\n      sameSite: \"lax\",\n      secure: true,\n      httpOnly: true\n    });\n  }\n  deleteSessionId() {\n    this._cookies.delete(CookiesManager._session_id_key, { path: \"/\" });\n  }\n}\nclass AuthService {\n  static async getSessionLifetimeSec() {\n    return await Database.getAppSettingInt(\"session_lifetime_sec\");\n  }\n  static getLimit(lifetime_sec) {\n    const limit = /* @__PURE__ */ new Date();\n    if (lifetime_sec == 0)\n      console.warn(\"lifetime_sec is 0\");\n    limit.setSeconds(limit.getSeconds() - lifetime_sec);\n    return limit;\n  }\n  static async createAuthToken(user_id, session_lifetime_sec) {\n    const session_limit = AuthService.getLimit(session_lifetime_sec);\n    const [auth_token] = await db.$transaction([\n      db.authToken.create({\n        data: { user_id, token: crypto.randomUUID() }\n      }),\n      db.authToken.deleteMany({ where: { updated_at: { lt: session_limit } } })\n    ]);\n    return auth_token;\n  }\n  static async findAuthToken(session_id) {\n    const session_lifetime_sec = await AuthService.getSessionLifetimeSec();\n    const session_limit = AuthService.getLimit(session_lifetime_sec);\n    const auth_token = await db.authToken.findFirst({\n      where: { updated_at: { gte: session_limit } },\n      include: { user: { include: { role: true } } }\n    });\n    return auth_token;\n  }\n  static async updateAuthToken(auth_token_id) {\n    const auth_token = await db.authToken.update({\n      where: { id: auth_token_id },\n      data: { updated_at: /* @__PURE__ */ new Date() }\n    });\n    return auth_token;\n  }\n  static async accessValid(auth_token_id, cookies) {\n    const auth_token = await AuthService.updateAuthToken(auth_token_id);\n    const session_lifetime_sec = await AuthService.getSessionLifetimeSec();\n    new CookiesManager(cookies).setSessionId(auth_token.token, session_lifetime_sec);\n  }\n  static async logIn(user_id, cookies) {\n    const session_lifetime_sec = await AuthService.getSessionLifetimeSec();\n    const auth_token = await AuthService.createAuthToken(user_id, session_lifetime_sec);\n    new CookiesManager(cookies).setSessionId(auth_token.token, session_lifetime_sec);\n  }\n  static async logOut(cookies) {\n    const cookiesManager = new CookiesManager(cookies);\n    await db.authToken.delete({ where: { token: cookiesManager.session_id } }).then(() => {\n      cookiesManager.deleteSessionId();\n    });\n  }\n}\nexport {\n  AuthService as A,\n  CookiesManager as C\n};\n"],"names":[],"mappings":"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"}